@import (reference) '~seek-asia-style-guide/theme';

.root {
  display: inline-block;
  font-size: inherit;
  width: 1em;
  height: 1em;
  line-height: 1;
  svg {
    fill: currentColor;
    width: 100%;
    height: 100%;
  }
}

.sizeSmall {
  width: @grid-base * 4;
  height: @grid-base * 4;
}

.sizeNormal {
  width: @grid-base * 6;
  height: @grid-base * 6;
}

.sizeLarge {
  width: @grid-base * 9;
  height: @grid-base * 9;
}

.smoothRotate {
  transition: transform 0.3s;
}

.rotateReset {
  transform: rotate(0deg);
}

.rotate90 {
  transform: rotate(90deg);
}

.rotate180 {
  transform: rotate(180deg);
}

.rotate90cc {
  transform: rotate(-90deg);
}

.rotate180cc {
  transform: rotate(-180deg);
}

.smallBounce {
  animation: bounce 0.3s both;
}

@keyframes bounce {
  from,
  to {
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    transform: translate3d(0, 0, 0);
  }
  40%,
  50% {
    animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
    transform: translate3d(0, -6px, 0);
  }
}

@keyframes rotate90 {
  to {
    transform: rotate(90deg);
  }
}

@keyframes rotate90cc {
  to {
    transform: rotate(-90deg);
  }
}

@keyframes rotate180 {
  to {
    transform: rotate(180deg);
  }
}

@keyframes rotate180cc {
  to {
    transform: rotate(-180deg);
  }
}

.popIn {
  animation: popIn 0.3s ease-in-out;
}

@keyframes popIn {
  0% { transform: scale(0.6); }
  50% { transform: scale(1.1); }
  100% { transform: scale(1); }
}

.iconLineHeight(ceil, @factor, @offset: 2) {
  line-height: ceil((@factor * @base-font-size / @grid-base) + @offset) * @grid-base * 1px;
}

.iconLineHeight(floor, @factor, @offset: 2) {
  line-height: floor((@factor * @base-font-size / @grid-base) + @offset) * @grid-base * 1px;
}

.lineHeightConversational {
  .iconLineHeight(floor, @conversational-type-scale-mobile);
  @media @desktop {
    .iconLineHeight(floor, @conversational-type-scale);
  }
}

.lineHeightIntimate {
  .iconLineHeight(floor, @intimate-type-scale-mobile);
  @media @desktop {
    .iconLineHeight(floor, @intimate-type-scale);
  }
}

.lineHeightLoud {
  .iconLineHeight(floor, @loud-type-scale-mobile);
  @media @desktop {
    .iconLineHeight(ceil, @loud-type-scale);
  }
}

.lineHeightScreaming {
  .iconLineHeight(ceil, @screaming-type-scale-mobile);
  @media @desktop {
    .iconLineHeight(ceil, @screaming-type-scale);
  }
}

.lineHeightShouting {
  .iconLineHeight(ceil, @shouting-type-scale-mobile);
  @media @desktop {
    .iconLineHeight(ceil, @shouting-type-scale);
  }
}

.lineHeightWaving {
  .iconLineHeight(floor, @waving-type-scale-mobile);
  @media @desktop {
    .iconLineHeight(ceil, @waving-type-scale);
  }
}

.lineHeightWhispering {
  .iconLineHeight(floor, @whispering-type-scale-mobile, 1);
  @media @desktop {
    .iconLineHeight(floor, @whispering-type-scale, 1);
  }
}

.lineHeightWhistling {
  .iconLineHeight(ceil, @whistling-type-scale-mobile);
  @media @desktop {
    .iconLineHeight(ceil, @whistling-type-scale);
  }
}

.lineHeightYelling {
  .iconLineHeight(ceil, @yelling-type-scale-mobile);
  @media @desktop {
    .iconLineHeight(ceil, @yelling-type-scale);
  }
}
